import json

ecosystem_to_collection_urls = {
    "go_modules": [
        "pkg.go.dev"
    ],
    "jenkins_plugins": [
        "plugins.jenkins.io",
    ],
    "npm": [
        "registry.npmjs.org",
    ],
    "php_composer": [
        "packagist.org",
    ],
    "pypi": [
        "pypi.org",
    ],
    "rubygems": [
        "rubygems.org",
    ],
    "rust_crates": [
        "crates.io",
    ],
    "wordpress_plugins": [
        "wordpress.org/plugins",
    ],
    "wordpress_themes": [
        "wordpress.org/themes",
    ],
    "github": [
        "github.com"
    ]
}

ecosystem_to_target_software = {
    "go_modules": "go",
    "jenkins_plugins": "jenkins",
    "npm": "node.js",
    "php_composer": "php",
    "pypi": "python",
    "rubygems": "ruby",
    "rust_crates": "rust",
    "wordpress_plugins": "wordpress",
    "wordpress_themes": "wordpress",
}

ignore = {
    "cpe:2.3:a:ruby-lang:ruby:*:*:*:*:*:*:*:*",
}

def serialize_sets(obj):
    if isinstance(obj, set):
        return sorted(list(obj))

    return obj

with open("/Users/weston/github/anchore/syft/syft/pkg/cataloger/internal/cpegenerate/dictionary/data/cpe-index.json", "r") as f:
    index = json.load(f)

with open("data/cpe/curated/lookup/by_collection_url_and_package_name/application.json", "r") as f:
    lookup = json.load(f)

for ecosystem, packages in index["ecosystems"].items():
    if ecosystem not in ecosystem_to_collection_urls:
        continue

    for collection_url in ecosystem_to_collection_urls[ecosystem]:
        if collection_url not in lookup:
            lookup[collection_url] = {}

        for p, cpes in packages.items():
            # TODO: normalization to lowercase won't always be correct for every ecosystem, 
            # but should be fine for the ones we support thus far
            p = p.lower()

            for cpe in cpes:
                if cpe in ignore:
                    continue

                components = cpe.split(":")
                if components[2] != "a":
                    continue

                if cpe == "cpe:2.3:a:pypi:pypi:*:*:*:*:*:*:*:*" and p != "pypi":
                    continue
                
                if p not in lookup[collection_url]:
                    lookup[collection_url][p] = set()
                else:
                    lookup[collection_url][p] = set(lookup[collection_url][p])
                
                lookup[collection_url][p].add(cpe)

            if p in lookup[collection_url]:
                processed = set()
                for cpe in lookup[collection_url][p]:
                    components = cpe.split(":")
                    if components[-3] == "*" and ecosystem in ecosystem_to_target_software:
                        components[-3] = ecosystem_to_target_software[ecosystem]
                        cpe = ":".join(components)
                    processed.add(cpe)
                
                lookup[collection_url][p] = processed
                


with open("data/cpe/curated/lookup/by_collection_url_and_package_name/application.json", "w") as f:
    json.dump(lookup, f, indent=2, sort_keys=True, default=serialize_sets)
    