import json

ecosystem_to_collection_urls = {
    "go_modules": [
        "pkg.go.dev"
    ],
    "jenkins_plugins": [
        "plugins.jenkins.io",
    ],
    "npm": [
        "www.npmjs.com",
    ],
    "php_composer": [
        "packagist.org",
    ],
    "pypi": [
        "pypi.org",
    ],
    "rubygems": [
        "rubygems.org",
    ],
    "rust_crates": [
        "crates.io",
    ],
    "wordpress_plugins": [
        "wordpress.org/plugins",
    ],
    "wordpress_themes": [
        "wordpress.org/themes",
    ],
}

def serialize_sets(obj):
    if isinstance(obj, set):
        return sorted(list(obj))

    return obj

with open("/Users/weston/github/anchore/syft/syft/pkg/cataloger/internal/cpegenerate/dictionary/data/cpe-index.json", "r") as f:
    index = json.load(f)

with open("data/cpe/curated/lookup/by_collection_url_and_package_name/application.json", "r") as f:
    lookup = json.load(f)

for ecosystem, packages in index["ecosystems"].items():
    if ecosystem not in ecosystem_to_collection_urls:
        continue

    for collection_url in ecosystem_to_collection_urls[ecosystem]:
        if collection_url not in lookup:
            lookup[collection_url] = {}

        for p, cpes in packages.items():
            # TODO: normalization to lowercase won't always be correct for every ecosystem, 
            # but should be fine for the ones we support thus far
            p = p.lower()

            if p not in lookup[collection_url]:
                lookup[collection_url][p] = set()
            else:
                lookup[collection_url][p] = set(lookup[collection_url][p])

            lookup[collection_url][p].update(set(cpes))

with open("data/cpe/curated/lookup/by_collection_url_and_package_name/application.json", "w") as f:
    json.dump(lookup, f, indent=2, sort_keys=True, default=serialize_sets)
    